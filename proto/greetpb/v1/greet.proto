syntax = "proto3";

package greetpb.v1;
option go_package = "github.com/adenix/go-grpc-boilerplate/gen/go/greetpb/v1;greetpb";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message Greeting {
  string first_name = 1;
  string last_name = 2;
}

message GreetRequest {
  Greeting greeting = 1;
}

message GreetResponse {
  string result = 1;
}

message GreetManyTimesRequest {
  Greeting greeting = 1;
}

message GreetManyTimesResponse {
  string result = 1;
  uint32 count = 2;
}

message LongGreetRequest {
  Greeting greeting = 1;
}

message LongGreetResponse {
  string result = 1;
}

service GreetService {
  rpc Greet(GreetRequest) returns (GreetResponse) {
    option (google.api.http) = {
      post: "/api/v1/greet"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Greet Caller"
      description: "Respond with a friendly greeting for the caller."
    };
  };

  rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse) {
    option (google.api.http) = {
      post: "/api/v1/greet/stream"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Greet Caller Repeatedly"
      description: "Respond with a friendly greeting for the caller."
    };
  };

  rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {
    option (google.api.http) = {
      post: "/api/v1/greet/long"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Greet Caller After Multiple Requests"
      description: "Respond with a friendly greeting for the caller."
    };
  };
}
